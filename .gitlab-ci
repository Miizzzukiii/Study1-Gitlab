image: docker:latest

services:
  - docker:dind

stages:
  - build
  - push_to_gitlab_registry
  - release
  - deploy_to_dev
  - deploy_from_feature_to_dev
  - deploy_from_release_to_dev
  - deploy_to_prod

variables:
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  RELEASE_VERSION: "1.0.0" #такая версия и была в package.json

build:
  stage: build
  script:
    - docker build -t build -f Dockerfile .
    - docker images
  artifacts:
    paths:
      - Dockerfile

push_to_gitlab_registry:
  stage: push_to_gitlab_registry
  script:
    - docker tag build $IMAGE_TAG
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    - docker push $IMAGE_TAG

release:
  stage: release
  script:
    - echo "$DOCKER_GITLAB_REGISTRY_PASSWD" | docker login --username "$DOCKER_GITLAB_REGISTRY_USERNAME" --password-stdin registry.gitlab.com
    - docker pull $IMAGE_TAG
    - echo "$DOCKER_HUB_PASSWORD" | docker login --username "$DOCKER_HUB_USER" --password-stdin
    - docker tag $IMAGE_TAG "$DOCKER_HUB_USER"/sqladminer:"$RELEASE_VERSION"
    - docker push "$DOCKER_HUB_USER"/sqladminer:"$RELEASE_VERSION"

deploy_to_dev:
  stage: deploy_to_dev
  script:
    - mkdir -p ~/.ssh
    - echo "$SSH_PUB_KEY" >> ~/.ssh/authorized_keys
    - chmod 700 ~/.ssh
    - chmod 600 ~/.ssh/authorized_keys
    - 'echo "$SSH_PUB_KEY" > ~/.ssh/authorized_keys'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - ssh -o StrictHostKeyChecking=no maryrudneva@"$IP_DEV" "
      sudo apt-get update -y && sudo apt-get upgrade -y &&
      sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose &&
      sudo chmod +x /usr/local/bin/docker-compose &&
      cd ~/project1/repo/todo-list-app/Study1 &&
      git pull https://"$GITLAB_USER":"$GITLAB_PASSWORD"@gitlab.com/exercises551817/Study1 dev &&
      echo "$DOCKER_HUB_PASSWORD" | docker login --username "$DOCKER_HUB_USER" --password-stdin &&
      docker pull $IMAGE_TAG && 
      echo "imageTag=$IMAGE_TAG" > ./.env && 
      echo "my_app=my-app-dev " >> ./.env &&
      docker-compose up -d   "
  environment:
    name: development 
    url: http://dev.domain.com
    auto_stop_in: 1 month
  only:
   - dev   

deploy_from_feature_to_dev:
  stage: deploy_from_feature_to_dev
  script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - ssh -o StrictHostKeyChecking=no maryrudneva@"$IP_DEV" "
      sudo apt-get update -y && sudo apt-get upgrade -y &&
      sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose &&
      sudo chmod +x /usr/local/bin/docker-compose &&
      cd ~/project1/repo/todo-list-app/Study1 &&
      git pull https://"$GITLAB_USER":"$GITLAB_PASSWORD"@gitlab.com/exercises551817/Study1 "$CI_COMMIT_REF_NAME" &&
      echo "$DOCKER_HUB_PASSWORD" | docker login --username "$DOCKER_HUB_USER" --password-stdin &&
      docker pull $IMAGE_TAG && 
      echo "imageTag=$IMAGE_TAG" > ./.env && 
      echo "my_app=my-app-feature " >> ./.env &&
      echo "app_port=3002 " >> ./.env &&
      echo "URL=${CI_COMMIT_SHA:0:4}.dev.domain.com" >> ./.env &&
      docker-compose up -d  &&
      echo "Application URL is http://${CI_COMMIT_SHA:0:4}.dev.domain.com"   "
  environment:
    name: development
    url: "http://${CI_COMMIT_SHA:0:4}.dev.domain.com"
    auto_stop_in: 1 month
  only:
    - /^feature-.*/

deploy_from_release_to_dev:
  stage: deploy_from_release_to_dev
  script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - ssh -o StrictHostKeyChecking=no maryrudneva@"$IP_DEV" "
      sudo apt-get update -y && sudo apt-get upgrade -y &&
      sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose &&
      sudo chmod +x /usr/local/bin/docker-compose &&
      cd ~/project1/repo/todo-list-app/Study1 &&
      git pull https://"$GITLAB_USER":"$GITLAB_PASSWORD"@gitlab.com/exercises551817/Study1 "$CI_COMMIT_REF_NAME" &&
      echo "$DOCKER_HUB_PASSWORD" | docker login --username "$DOCKER_HUB_USER" --password-stdin &&
      docker pull $IMAGE_TAG && 
      echo "imageTag=$IMAGE_TAG" > ./.env && 
      echo "my_app=my-app-release " >> ./.env &&
      echo "app_port=3001 " >> ./.env &&
      echo "URL=${CI_COMMIT_SHA:0:4}.dev.domain.com" >> ./.env &&
      docker-compose up -d  &&
      echo "Application URL is http://${CI_COMMIT_SHA:0:4}.dev.domain.com"  "
  environment:
    name: development
    url: "http://${CI_COMMIT_SHA:0:4}.dev.domain.com"
    auto_stop_in: 1 month
  only:
    - release

deploy_to_prod:
  stage: deploy_to_prod
  script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - ssh -o StrictHostKeyChecking=no maryrudneva@"$IP_PROD" "
      sudo apt-get update -y && sudo apt-get upgrade -y &&
      cd ~/project1/repo/todo-list-app/Study1 &&
      git pull https://"$GITLAB_USER":"$GITLAB_PASSWORD"@gitlab.com/exercises551817/Study1 &&
      docker stop "$CONTAINER_NAME" || true &&
      docker rm "$CONTAINER_NAME" || true &&
      echo "$DOCKER_HUB_PASSWORD" | docker login --username "$DOCKER_HUB_USER" --password-stdin &&
      docker pull $IMAGE_TAG && 
      sudo docker run -d --name "$CONTAINER_NAME" -p 432:3000 "$IMAGE_TAG" "
  environment:
    name: production
    url: http://domain.com
  only:
    - main
    - tags



